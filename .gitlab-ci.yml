stages:
  - version
  - test
  - build
  - publish
  - doc-build
  - doc-serve
  - release

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  VERSION_FILE: version.sh
  GIT_DEPTH: 500
  JDK_VERSION: 8.0.265.hs-adpt
  SBT_VERSION: 1.3.10
  SPHINX_VERSION: 3.2.1
  DOCKER_VERSION: 19.03.12
  SCALA_MAJOR_VERSION: 2
  SCALA_MINOR_VERSION: 12
  GKL_VERSION: 0.8.5-1
  HADOOP_BAM_VERSION: 8.0.0-SNAPSHOT


# --------------------------------- STAGE: version ---------------------------------------------------------------------
version-branch:
  stage: version
  image:
    name: mdomke/git-semver:v4.0.1
    entrypoint: [""]
  script:
    - cd /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME && git-semver --format x.y.z+m | sed -e 's/$/-SNAPSHOT/g' | xargs -I {} echo "export VERSION={}" > $VERSION_FILE
    - cat $VERSION_FILE
  artifacts:
    paths:
      - $VERSION_FILE
  tags: [ docker ]
  except: [ master, tags ]

version-tag:
  stage: version
  image:
    name: mdomke/git-semver:v4.0.1
    entrypoint: [""]
  script:
    - cd /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME && git-semver --no-hash --no-pre | xargs -I {} echo "export VERSION={}" > $VERSION_FILE
    - cat $VERSION_FILE
  artifacts:
    paths:
      - $VERSION_FILE
  tags: [ docker ]
  only:
    - tags
  except:
    - branches

test:
  stage: test
  image:
    name: biodatageeks/jdk-sbt:$JDK_VERSION-$SBT_VERSION
  variables:
    SBT_OPTS: "-Dsbt.ivy.home=sbt-cache/ivy"
  cache:
    key: $CI_PROJECT_PATH
    paths:
      - "sbt-cache/ivy/cache"
  before_script:
    - source $VERSION_FILE
  script:
    - sbt clean test
  except: [ master ]
  tags: [ docker ]

build:
  stage: build
  image:
    name: biodatageeks/jdk-sbt:$JDK_VERSION-$SBT_VERSION
  variables:
    SBT_OPTS: "-Dsbt.ivy.home=sbt-cache/ivy"
  cache:
    key: $CI_PROJECT_PATH
    paths:
      - "sbt-cache/ivy/cache"
  before_script:
    - source $VERSION_FILE
  script:
    - sbt clean package
    - ./merge_jars.sh
      /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/lib/gkl-$GKL_VERSION-darwin-SNAPSHOT.jar
      /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/target/scala-$SCALA_MAJOR_VERSION.$SCALA_MINOR_VERSION/sequila_$SCALA_MAJOR_VERSION.$SCALA_MINOR_VERSION-$VERSION.jar
    - ./merge_jars.sh
      /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/lib/hadoop-bam-$HADOOP_BAM_VERSION.jar
      /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/target/scala-$SCALA_MAJOR_VERSION.$SCALA_MINOR_VERSION/sequila_$SCALA_MAJOR_VERSION.$SCALA_MINOR_VERSION-$VERSION.jar

  artifacts:
    paths:
      - /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/target/scala-$SCALA_MAJOR_VERSION.$SCALA_MINOR_VERSION/
  tags: [ docker ]
  except: [ master ]

publish:
  stage: publish
  image:
    name: biodatageeks/jdk-sbt:$JDK_VERSION-$SBT_VERSION
  variables:
    SBT_OPTS: "-Dsbt.ivy.home=sbt-cache/ivy"
  cache:
    key: $CI_PROJECT_PATH
    paths:
      - "sbt-cache/ivy/cache"
  before_script:
    - source $VERSION_FILE
  script:
    - ls -ltra /root/.ivy2/
    - mv /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/target/scala-$SCALA_MAJOR_VERSION.$SCALA_MINOR_VERSION/sequila*jar /tmp
    - sbt publishLocal
    - mv /tmp/sequila*jar /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/target/scala-$SCALA_MAJOR_VERSION.$SCALA_MINOR_VERSION/
    - sbt publish
  tags: [ docker ]
  except: [ master, tags ]

release:
  stage: release
  image:
    name: biodatageeks/jdk-sbt:$JDK_VERSION-$SBT_VERSION
  variables:
    SBT_OPTS: "-Dsbt.ivy.home=sbt-cache/ivy"
  cache:
    key: $CI_PROJECT_PATH
    paths:
      - "sbt-cache/ivy/cache"
  before_script:
    - source $VERSION_FILE
  script:
    - cd /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
    - mv /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/target/scala-$SCALA_MAJOR_VERSION.$SCALA_MINOR_VERSION/sequila*jar /tmp
    - sbt publish
    - mv /tmp/sequila*jar /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/target/sonatype-staging/$VERSION/org/$CI_PROJECT_NAMESPACE/${CI_PROJECT_NAME}_${SCALA_MAJOR_VERSION}.${SCALA_MINOR_VERSION}/$VERSION/
    - find /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/target/sonatype-staging/  -name "$CI_PROJECT_NAME*.jar" -o -name "$CI_PROJECT_NAME*.pom" | xargs -I {} sh -c "sha1sum {} > {}.sha1"
    - find /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/target/sonatype-staging/  -name "$CI_PROJECT_NAME*.jar" -o -name "$CI_PROJECT_NAME*.pom" | xargs -I {} sh -c "md5sum {} > {}.md5"
    - find /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/target/sonatype-staging/  -name "$CI_PROJECT_NAME*.jar" -o -name "$CI_PROJECT_NAME*.pom" | xargs -I {} sh -c "echo $PGP_PASSPHRASE | PASSPHRASE=$PGP_PASSPHRASE gpg --detach-sign --armor --use-agent --pinentry-mode loopback --command-fd 0 --output {}.asc {}"
    - sbt sonatypeBundleRelease
  tags: [ docker ]
  only:
    - tags
  except:
    - branches
  when: manual

doc-build:
  stage: doc-build
  image:
    name: "sphinxdoc/sphinx:$SPHINX_VERSION"
  before_script:
    - pip install -U sphinx_rtd_theme rst2pdf sphinxcontrib-github_ribbon "sphinxcontrib-bibtex<2.0.0"
    - source $VERSION_FILE
  script:
    - cd docs && ./docs.sh html
  artifacts:
    paths:
      - /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/docs/build/
  tags: [ docker ]
  except: [ master]

doc-serve:
  stage: doc-serve
  image:
    name: docker:$DOCKER_VERSION
  before_script:
    - source $VERSION_FILE
  script:
    - ./build_docs.sh
  tags: [ docker ]
  except: [ master]

